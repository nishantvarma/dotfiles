#!/usr/bin/env rc

fn bat {
	charge=`{cat /sys/class/power_supply/BAT0/capacity}
	if (test $charge -lt 15) charge=`{warn $charge}
	echo $charge
}

fn cpu {
	top -bn1 | grep 'Cpu(s)' | awk '{printf "%.1f", $2 + $4}'
}

fn desks {
	multi='Desktop '
	desks=`{bspc query -D --names}
	foc=`{bspc query -D -d focused --names}
	occ=`{bspc query -D -d .occupied --names}
	for (desk in $desks) {
		sing='%{A:bspc desktop -f '$desk':} '$desk' %{A}'
		if (~ $desk $foc) sing=`{hl $sing}
		if not if (echo $occ | grep -q $desk) sing=`{mark $sing}
		multi=$"multi$"sing
	}
	lyt=`{bspc query -T -d | jq -r .layout}
	echo $multi [$"lyt]
}

fn hl {
	echo '%{F#000000}%{B#ffffff}'$1'%{F-}%{B-}'
}

fn mark {
	echo '%{F#ffffff}%{B#262626}'$1'%{F-}%{B-}'
}

fn mem {
	top -bn1 | grep 'MiB Mem' | awk '{printf "%.1f", $8 / 1024}'
}

fn process {
	while (true) {
		eval `{read} && ready
	}
}

fn ready { echo ok >/tmp/bar.fifo }

fn timer {
	while (true) {
		sleep 1 && ready
	}
}

fn status {
	while (true) {
		desks=`{desks}
		date=`{date}
		cpu=`{cpu}
		mem=`{mem}
		bat=`{bat}
		l='%{l}'$"desks
		c='%{c}'$"date
		r='%{r}Cpu '$"cpu'% | Mem '$"mem'g | Bat '$"bat'%'
		echo $"l$"c$"r
		read /tmp/bar.fifo >/dev/null
	}
}

fn warn {
	echo '%{F#ffffff}%{B#ff0000}'$1'%{F-}%{B-}'
}

if (! test -f /tmp/bar.fifo) {
	mkfifo /tmp/bar.fifo
}

timer &

status | lemonbar -B '#121212' -F '#ffffff' -p | process
